[{"/home/kivimani/fullstack2023/osa2/part2/src/index.js":"1","/home/kivimani/fullstack2023/osa2/part2/src/App.js":"2","/home/kivimani/fullstack2023/osa2/part2/src/components/Note.js":"3","/home/kivimani/fullstack2023/osa2/part2/src/services/notes.js":"4","/home/kivimani/fullstack2023/osa2/part2/src/components/Notification.js":"5","/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/index.js":"6","/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/App.js":"7","/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/components/Note.js":"8","/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/services/notes.js":"9","/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/components/Notification.js":"10"},{"size":154,"mtime":1689943544760,"results":"11","hashOfConfig":"12"},{"size":2676,"mtime":1689944216642,"results":"13","hashOfConfig":"12"},{"size":298,"mtime":1689943630757,"results":"14","hashOfConfig":"12"},{"size":665,"mtime":1690797187929,"results":"15","hashOfConfig":"12"},{"size":207,"mtime":1689943838727,"results":"16","hashOfConfig":"12"},{"size":154,"mtime":1690800932421,"results":"17","hashOfConfig":"18"},{"size":2676,"mtime":1690800932421,"results":"19","hashOfConfig":"18"},{"size":298,"mtime":1690800932421,"results":"20","hashOfConfig":"18"},{"size":644,"mtime":1690801156208,"results":"21","hashOfConfig":"18"},{"size":207,"mtime":1690800932421,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nsmngt",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sbzvq4",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kivimani/fullstack2023/osa2/part2/src/index.js",[],[],"/home/kivimani/fullstack2023/osa2/part2/src/App.js",["56"],[],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2022</em>\n    </div>\n  )\n}\n\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [newNote, setNewNote] = useState('')\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n  \n      .catch(error => {\n        setErrorMessage(          \n          `Note '${note.content}' was already removed from server`        \n          )        \n          setTimeout(() => {          \n            setErrorMessage(null)        \n          }, 5000)        \n          setNotes(notes.filter(n => n.id !== id))\n      })\n\n  }\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {        \n        setNotes(initialNotes)      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {        \n        setNotes(notes.concat(returnedNote))        \n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div> \n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} \n          note={note} \n          toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input \n        value={newNote}\n        onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />   \n    </div>\n  )\n}\n\nexport default App ","/home/kivimani/fullstack2023/osa2/part2/src/components/Note.js",[],[],"/home/kivimani/fullstack2023/osa2/part2/src/services/notes.js",["57"],[],"import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","/home/kivimani/fullstack2023/osa2/part2/src/components/Notification.js",[],[],"/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/index.js",[],[],"/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/App.js",["58"],[],"/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/components/Note.js",[],[],"/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/services/notes.js",["59"],[],"import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","/home/kivimani/Fullstack2023_Osa3/osa3/part2/src/components/Notification.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":24,"column":1,"nodeType":"66","endLine":24,"endColumn":42},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":24,"column":1,"nodeType":"66","endLine":24,"endColumn":42},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]